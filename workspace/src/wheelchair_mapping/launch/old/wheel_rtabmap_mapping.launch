<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find wheelchair_description)/urdf/wheelchair_real.xacro'" />
  <arg name="multi_robot_name" default=""/>
  <param name="robot_description" command="$(arg urdf_file)" />

  <!--node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value="$(arg multi_robot_name)"/>
  </node-->

    <!--Starting rtabmap mapping-->
  <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
	<arg name="args" value="--delete_db_on_start --Grid/MaxObstacleHeight 1.0"/>

	<param name="Odom/ResetCountdown" type="string" value="1"/>
	<param name="Rtabmap/StartNewMapOnLoopClosure"  type="bool" value="true"/>
        <!--param name="Mem/DepthAsMask"  type="bool" value="false"/>
	<param name="Vis/DepthAsMask"  type="bool" value="false"/-->
	
	<!--arg name="frame_id" value="base_link"/-->     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
        <!--arg name="odom_frame_id" value="odom"/-->                <!-- If set, TF is used to get odometry instead of the topic -->
 	<!--arg name="odom_frame_id_init" =""/-->       

	<!--param name="subscribe_depth" value="false"/>

	<arg name="subscribe_scan_cloud" value="true"/>
	<arg name="scan_cloud_topic" value="/camera/depth/points"/-->

        <arg name="rgb_topic" value="/camera/color/image_raw"/>
        <arg name="camera_info_topic" value="/camera/color/camera_info"/>

	<arg name="visual_odometry" value="false"/>
        <arg name="odom_topic" value="/odom"/>

	<arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
        <arg name="depth_camera_info_topic" value="/camera/depth/camera_info"/>
	
	<!--arg name="subscribe_scan" value ="false"/-->
	<!--arg name="scan_topic" value="/scan"/-->

	<arg name="approx_sync" value="true"/> 
        <arg name="rtabmapviz" value="true"/>


  </include>
  
</launch>
